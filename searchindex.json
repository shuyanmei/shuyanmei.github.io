[{"content":" \nIn the past year, I started to pick up some optimization algorithms in work to solve problems like finding optimal prices to maximize business' profits with constraints. While memory is still fresh, I decided to write down my learning notes here. This is not an exhaustive survey of optimization algorithms, it only serves as the learning notes of the optimization algorithms which I have exposed so far.\nOptimization Overview There are different ways to categorize the optimization algorithm. Depends on the objective function, we can have linear or non-linear optimization. Based on the input type, we can have numeric optimization and discrete optimization. There are optimizations with constraints and without any constraints. Depends on the number of objective functions, we can have single and multiple objective optimizations.\n1. No constraints and differentiable objective function The first scenario that comes to my mind is when we have a differentiable objective function without any constraints.\n1.1 Gradient Descent When we are searching the values, Gradient descent tries to go in the direction such that the value of cost function f(x+\\delta x) at the next step is smaller than the current one f(x). To find the direction of the movement, we take the derivative of the function at each step, assume the function is differentiable. Depends on how far we move each step, the algorithm can take a long time to converge, or even not converges.\n1.2 Newton Method If the cost function is also twice differnetiable, then we can use newton method, and quasi newton method according to Taylor expansion.\nTaylor Expansion Given a real or complex twice differentiable function f, then the value at point \\(x_0\\) can be approximated as \\( f(x_0) + f'(x_0)(x-x_0) + \\frac{1}{2}f'(x_0)(x-a)^2 \\)\nThe Newton Method, not only takes the direction of the movement but also the velocity(second derivative) into account. Therefore, using the Newton method is more efficient when updating each step. But sometimes we don't have the second derivative.\n1.3 Quasi-Newton Method To solve the problem of the newton method in the case we don't have the second derivative, Quasi-Newton can be used. The main difference is that Quasi-Newton uses an approximation of the second derivative to replace the derivative to do the computation.\n1.4 Why not use an analytical solution? Consider that since we can take the derivatives, why not just set the derivative of the objective function as zero, and then solve analytically. One main reason is that sometimes we have a huge dataset and multiple variables, the computation time can be longer if we need to do matrix transformation, but gradient descent or the newton method is iterative, so it can be less expensive.\n2. Not differentiable? In reality, we do not have such optimistic cases. Not every objective function is differentiable. Consider a discrete case below.\nExample, the traveling salesman The traveling salesman is a classical discrete optimization problem. The salesman starting from city A, and travel N cities, and only one time for each city, and eventually come back to city A, what is the shortest path?\nIn this case, we can not find an analytical solution. The brute force solution is that we iterate all permutation which has a time complexity of O(N!). There are algorithms we can use here such as simulated annealing, GA, random hill climbing.\nI summarize the algorithms below. These algorithms can be effective in discrete cases.\n2.1 Genetic Algorithm Genetic algorithm is one type of evolutionary algorithm. The algorithm uses the idea from biology to mimic natural selection. Take the traveling salesman as an example. The genetic algorithm first randomly generates a population (a set of routes), and then rank the routes by fitness, in this case, it is the shortest distance. The next step is to randomly select two routes as the 'parent route' and pass the elements in each parent route to make a 'child'. This process is known as crossover. To explore more possibilities, the final step is to perform mutation which is randomly select two cities in each parent route to swap with a predefined probability(say 3%) The child serves as the next generation and we repeat to full. Over time, it will generate a better(shorter distance) generation.\nBecause of the mutation and crossover, We do not always reach the global optimal but can reach the local optimum fairly quickly.\n2.2 Simulated Annealing This algorithm's idea comes from annealing the metal. If we cool the meta fast, then the irons in the meta are randomly spread, but if we cool it slowly, then it will be more structured, and more stable. The algorithms work in the following way. We have an initial temperature, and in the next step, we evaluate the fitness of the route and decide whether to switch to the next possible route with a probability. The probability is associated with temperature. We decrease temperature over time, so we are less likely to back to the previous path. By doing this, we are less likely to be stuck at a local minimum. More likely to reach the global optimum.\n2.3 Hill-Climbing with Random Restart Hill climbing is straightforward as its name suggests. We start with a random path and find the neighbor path, compare it with the current path to see if it is better, if it is, then we select the next path. The problem is also about stuck at a local minimum. Then we introduce random restart into it, so it does not get into local optimum.\n3. Optimization with constraints In reality, we usually have constraints when doing optimization. Based on the constraint type, there are different methods to optimize.\n3.1 Lagrange multiplier for Equality constraint only If the constraint can be expressed as equality, Then we can use Lagrange Multiplier to solve the algorithm. For example, a retail business wants to maximize its profits given certain constraints of the budget. The cost is labor and raw material. Revenue is a function of labor and raw material. In this scenario, we want to maximize the revenue function f. Let x, y denote the labor cost and raw material. Then both f and the cost function g are functions of x and y. We want to max out the budget, thus g(x,y) ideally should be equal to budget (c).\nThe optimization problem can be formulated as the following.\n\\[ max f(x,y) \\]\ngiven the constraint that \\( g(x,y)= c \\)\nwhere c is a constant.\nWe want the coutour to barely touch the constraints. To do that, the vector perpendicular to the tangent line at that intersection point should go the same direction as the gradient of the constraint function.\nThat is to say,\n\\[ \\nabla f = \\lambda \\nabla g \\]\nwhich is equivalent to\n\\[ \\frac{\\partial f}{\\partial x} = \\lambda \\frac{\\partial g}{\\partial x} \\]\n\\[ \\frac{\\partial f}{\\partial y} = \\lambda \\frac{\\partial g}{\\partial y} \\]\nwhere \\( \\lambda \\) is a constant. Solve the equation above, we can get the value of x and y.\n3.2 Interior point method for inequality constraints However, the above case is a very strict constraint. There are times we face an inequality constraint. In this case, we can use the interior point method such as the barrier function to convert it to a non-constrain problem and then solve it.\nReferences [1] https://en.wikipedia.org/wiki/Quasi-Newton_method\n[2] https://www.khanacademy.org/math/multivariable-calculus/applications-of-multivariable-derivatives/lagrange-multipliers-and-constrained-optimization/v/lagrange-multiplier-example-part-1\n[3] https://en.wikipedia.org/wiki/Interior-point_method\nrenderMathInElement(document.body);\n","date":"28 December, 2020","id":0,"permalink":"/documentation/optimization-notes/","summary":"In the past year, I started to pick up some optimization algorithms in work to solve problems like finding optimal prices to maximize business' profits with constraints. While memory is still fresh, I decided to write down my learning notes here. This is not an exhaustive survey of optimization algorithms, it only serves as the learning notes of the optimization algorithms which I have exposed so far.\nOptimization Overview There are different ways to categorize the optimization algorithm.","tags":"work","title":"Optimization Learning Notes"},{"content":"Introduction\nTech industry has been booming for years. We hear a lot of stories of peaks such as competitive salaries, work-life balance, unlimited vacation one can get working in a tech company. But are the employees really happy with their jobs? What drives their satisfaction and what makes them to leave?\nI used data from Stackoverflow\u0026rsquo;s 2017 Annual Developer Survey to investigate this problem.\nThis survey has around 64000 reviews from 213 countries. The survey\u0026rsquo;s responses are mostly collected from developers and the questions asked in the survey are related to many aspects of developer\u0026rsquo;s job and career. Some of the aspects covered:\n How do they break into this field at the first place? The developer\u0026rsquo;s education, especially coding background The developers' job responsibility and satisfaction What makes them to looking for new opportunity? What they value most when they look for the next position? The developers' interaction with Stackoverflow.  Here I am interested in dig dive into data to figure out three problems.\nPart I How satisfied are you as a developer ? There is one rating question in the survey asking about the job satisfaction. The answer is rated from 0-10 which 10 represents highly satisfied and 0 represents highly dissatisfied. I first filter out responses with NA values. Below is a table showing the response counts and percentage for each rating.\n   Job Satisfaction Rating Counts Percentage     8.0 8983 22.25%   7.0 7969 19.74%   9.0 5573 13.8%   6.0 4726 11.7%   10.0 4148 10.27%   5.0 3749 9.29%   4.0 1865 4.62%   3.0 1635 4.05%   2.0 888 2.2%   0.0 467 1.16%   1.0 373 0.92%    Here, I used a metric called \u0026lsquo;top 3 box\u0026rsquo; to measure satisfaction. A Top 3 Box score summarizes the positive responses from a scale survey question. It combines the highest 3 responses of the scale to create one single number.\nBelow plot shows the job satisfaction by country using the metric top 3 box. The countries I selected here have a response threshold of 500. Top countries for satisfaction score are Netherlands, Canada, Sweden and United States. All these four countries has over 50% top 3 box score.\nPart II Does salary drive satisfaction? Is there anything else?\nThere are many factors which can drive job satisfaction, such as salary, health benefits and vacation. To figure out does salary drives job satisfaction. I check the average salary of the top five countries which has the highest average salary.\nBelow tables shows the average salary of these countries.\n   Country Average Salary     United States 86862.40   Canada 60821.54   United Kingdom 56086.99   Germany 44121.32   India 11603.47    The top countries with high average salaries also have a high job satisfaction (except India). Salary does have some impact on the job satisfaction. In addition to salary, does the benefits also influence employees\u0026rsquo;s satisfaction?\nOne of the survey\u0026rsquo;s question is:\n When it comes to compensation and benefits, other than base salary, which of the following are most important to you?\n The following table shows the counts of each factors people think is most important to them.\n   Important Benefits Counts     Vacation/days off 5757   Health benefits 4455   Expected work hours 4288   Remote options 5008   Retirement 2658   Annual bonus 2983   Equipment 4002   Professional development sponsorship 3615   Stock options 1300   Child/elder care 694   Long-term leave 1240   Meals 1258   Other 247   Private office 872   Education sponsorship 1287   Charitable match 199   None of these 82    The top three factosr are vacation, health benefits and expected work hours.\nPart III Why people leaved their job? To figure out why people are leaving their job, I took a closer look at below question in the survey.\n You said before that you used to code as part of your job, but no longer do. To what extent do you agree or disagree with the following statements?\n The top three reasons for people to quit coding are:\n I don\u0026rsquo;t think my coding skills are up to date If money weren\u0026rsquo;t an issue, I would take a coding job again My career is going the way I thought it would 10 years ago  and they counts for 17%, 17% and 15% of the total respectively.\nThe technical skills is the most essential for developer. One need to keep updated for their coding skills. Just as important as coding skills, money also factors into developer\u0026rsquo;s career decision. At the same time, some of the developers are looking for a career change and they do want to try out different things. That is also one reason they left their job.\n","date":"5 September, 2018","id":1,"permalink":"/documentation/third-post/","summary":"Introduction\nTech industry has been booming for years. We hear a lot of stories of peaks such as competitive salaries, work-life balance, unlimited vacation one can get working in a tech company. But are the employees really happy with their jobs? What drives their satisfaction and what makes them to leave?\nI used data from Stackoverflow\u0026rsquo;s 2017 Annual Developer Survey to investigate this problem.\nThis survey has around 64000 reviews from 213 countries.","tags":"","title":"Are you satisfied with your job as a developer?"},{"content":"Hello, I finally got my first personal webpage set up!\nI will use this website to share some of my projects in statistics, machine learning or programming.\nThis website is hosted on Github and I used Hugo and Ananke to set up.\n","date":"25 August, 2018","id":2,"permalink":"/documentation/heyyyy/","summary":"Hello, I finally got my first personal webpage set up!\nI will use this website to share some of my projects in statistics, machine learning or programming.\nThis website is hosted on Github and I used Hugo and Ananke to set up.","tags":"","title":"Hello World!"},{"content":"Hey, nice to meet you here!\nMy name is Shuyan, and I am a data scientist working in finance, located in Toronto.\nThis is the page to share my thoughts on work, life, self reflection and some random staff.\n","date":"1 January, 0001","id":3,"permalink":"/about/","summary":"Hey, nice to meet you here!\nMy name is Shuyan, and I am a data scientist working in finance, located in Toronto.\nThis is the page to share my thoughts on work, life, self reflection and some random staff.","tags":"","title":"About"},{"content":"       ","date":"1 January, 0001","id":4,"permalink":"/contact/","summary":"       ","tags":"","title":"Contact"},{"content":"You must have Javascript enabled to use this function.\nLoading search index…\nSearch Search      Title here Date here  Summary here   ","date":"1 January, 0001","id":5,"permalink":"/search/","summary":"You must have Javascript enabled to use this function.\nLoading search index…\nSearch Search      Title here Date here  Summary here   ","tags":"","title":"Search"}]